#! /bin/bash
#
# Generated by the utility: /z/tools/collect_git_checked_out_branch_recusively.sh 
#
# Checkout each git repository to the given branch/commit or list them
#

mode=h;
while getopts ":hlrc" opt ; do
  #echo opt+arg = "$opt$OPTARG"
  case "$opt$OPTARG" in
  l )
    mode=l;
    ;;

  c )
    mode=c;
    ;;

  r )
    mode=r;
    ;;

  * )
    ;;
  esac
done

if test "$mode" = "h" ; then
  cat <<EOH
checkout_to_known_git_branches_recursive.sh options

Options:

-h      : print this help
-l      : LIST the branch/commit for each git repository (directory) registered in this script.
-c      : CHECKOUT each git repository to the BRANCH registered in this script.
-r      : CHECKOUT/REVERT each git repository to the COMMIT registered in this script.

Note:

Use the '-r' option to set each repository to an exact commit position, which is useful if,
for instance, you wish to reproduce this registered previous software state (which may
represent a software release) which you wish to analyze/debug.

EOH
  exit 1;
fi

if test "$mode" = "l" ; then
  cat <<EOH

Git repository directory                    :: commit hash                         / branch name
--------------------------------------------::--------------------------------------------------
EOH
fi



# args: DIR COMMIT [BRANCH]
git_repo_checkout_branch() {
  if test "$mode" = "c" || test "$mode" = "r" ; then
    if test -d "$1" ; then
      pushd "$1"                                                               2> /dev/null  > /dev/null
      printf "%-43s :: %s / %s\n" "$1" "$2" "$3"
      if test "$mode" = "c" ; then
        if test -n "$3" ; then
          # make sure the branch is created locally and is a tracking branch, if it isn't already:
          # https://www.cyberciti.biz/faq/bash-remove-whitespace-from-string/
          current_branch=$( git branch --show-current )
          if test -z "$current_branch" -o "$current_branch" != "$3" ; then
            git checkout "$3"
          fi

          shopt -s extglob
          remote_branch=$( git branch -vv --list $3 '--format=%(upstream)' )
          # Trim leading whitespaces
          remote_branch="${remote_branch##*( )}"
          # Trim trailing whitespaces
          remote_branch="${remote_branch%%*( )}"
          echo "=${remote_branch}="
          shopt -u extglob

          if test -z "$remote_branch" ; then
            echo "No remote branch registered for local branch: $3 --> setting up the remote."
            git branch --track "$3" "remotes/origin/$3"                          2> /dev/null  > /dev/null
            git branch --set-upstream-to=remotes/origin/$3 $3                    2> /dev/null  > /dev/null
            git checkout "$3"
          fi
        else
          current_branch=$( git branch --show-current )
          echo "=${current_branch}="
          if test -z "$current_branch" -o "$current_branch" != "master" ; then
            # checkout to the first of `master` or `main` in case we're not checked out to either right now:
            if test "$current_branch" != "main" -a "$current_branch" != "master" ; then
              echo "Checking out to master/main:"
              git checkout master
              if test $? -ne 0 ; then
                git checkout main
              fi
            fi
          fi
        fi
      else
        git checkout "$2"
      fi
      popd                                                                     2> /dev/null  > /dev/null
    fi
  else
    if test -d "$1" ; then
      printf "%-43s :: %s / %s\n" "$1" "$2" "$3"
    else
      printf "%-43s :: %s / %s\n" "[DIRECTORY DOES NOT EXIST!] $1" "$2" "$3"
    fi
  fi
}


#
# Make sure we switch to the utility directory as all the relative paths for the repositories
# are based off that path!
#
pushd $(dirname $0)                                                            2> /dev/null  > /dev/null



#
# The registered repositories:
#

git_repo_checkout_branch "../3rd/AT-browser"                      0541078999c1decfe8cd840f0a8996a68c50c0ee gh-pages  
git_repo_checkout_branch "../3rd/HTML5test"                       47687ab6e94f6485c57eff75e8f79bc8cc95cbf1 version-9.0
git_repo_checkout_branch "../3rd/Va11yS"                          b230bc37a7cef5245f94965dbf387a9726d67e1e master    
git_repo_checkout_branch "../3rd/html5lib"                        a9f44960a9fedf265093d22b2aa3c7ca123727b9 master    
git_repo_checkout_branch "../3rd/kitchen-sink"                    f748b97792e46ada7ff40d87f718e1aae1223fc0 master    
git_repo_checkout_branch "../3rd/test-page5"                      714dc01c7888abea564c1b5ede4bcfe4cb99e444 master    
git_repo_checkout_branch "../3rd/tidy"                            46b5881bda197552fb309c2250182cea37428ed9 heads/next
git_repo_checkout_branch "../3rd/wpt"                             76acd7b4385d1737d642621f841ff5a69030ce2b master    

# --- all done ---

popd                                                                           2> /dev/null  > /dev/null

